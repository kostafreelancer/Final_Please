<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lancer.mapper.f_boardMapper">
	
	<insert id="create" parameterType="F_BoardVO">
		insert into f_board (f_board_num, f_board_title, f_board_content, f_board_date)
		values (f_board_seq.nextval, #{f_board_title}, #{f_board_content}, sysdate)
	</insert>
	
	<select id="listAll" resultType="F_BoardVO">
		<![CDATA[
			select 
				f_board_num, f_board_title, f_board_content, f_board_hits, 
				f_board_date, f_reply_count, f_num
			from f_board
			where f_board_num>0
		]]>
	
		<include refid="search"></include>
          
      <![CDATA[     
          order by f_board_num desc, f_board_date desc
       ]]>  
    </select>
    
    
	   <sql id="search">
      <if test="searchType != null">
         <if test="searchType == 't'.toString()">
            and title like '%'|| #{keyword}||'%'
         </if>
         <if test="searchType == 'c'.toString()">
            and content like '%'|| #{keyword}||'%'
         </if>
         <if test="searchType == 'w'.toString()">
            and writer like '%'|| #{keyword}||'%'
         </if>
         <if test="searchType == 'tc'.toString()">
            and ( title like '%'|| #{keyword}||'%' OR content like
            '%'||
            #{keyword}||'%')
         </if>
         <if test="searchType == 'cw'.toString()">
            and ( content like '%'|| #{keyword}||'%' OR writer like
            '%'||
            #{keyword}||'%')
         </if>
         <if test="searchType == 'tcw'.toString()">
            and ( title like '%'|| #{keyword}||'%'
            OR
            content like
            '%'|| #{keyword}||'%'
            OR
            writer like '%'|| #{keyword}||'%')
         </if>
      </if>
   </sql>
   
   
	<select id="read" resultType="F_BoardVO">
		select
			f_board_num, f_board_title, f_board_content, f_board_hits, 
			f_board_date, f_reply_count , freelancer.f_num, f_id 
		from f_board, freelancer
		where f_board_num=#{f_board_num}  and f_board.f_num = freelancer.f_num
	</select>
	
	<update id="update" parameterType="F_BoardVO">
		update f_board set f_board_title=#{f_board_title}, f_board_content=#{f_board_content}
		where f_board_num=#{f_board_num}
	</update>
	
	<delete id="delete">
		delete from f_board 
		where f_board_num=#{f_board_num}
	</delete>
	
   <select id="countPaging" resultType="int">
   <![CDATA[
      select count(f_board_num) from f_board where f_board_num > 0         
   ]]>  
	  <include refid="search"></include>
   </select>
   
      <update id="updateReplyCnt">
      update f_board set f_reply_count = f_reply_count + #{amount}
         where f_board_num = #{f_board_num}
   </update>
   
   <select id="getBno" resultType="int">
      select f_board_num from f_board where f_reply_num = #{f_reply_num}
   </select>
   
   <update id="updateViewCnt">
      update f_board set f_board_hits = f_board_hits + 1 
         where f_board_num = #{f_board_num}
   </update>
   
   <select id="maxNum" resultType="int">
      select MAX(f_board_num) from f_board
   </select>
   
<!--    <insert id="addAttach" >
      insert into tbl_attach(fullname, bno) 
         values(#{fullName}, board_seq.currval)
   </insert> 
   
   <select id="getAttach" resultType="string">
      select fullname from tbl_attach where bno = #{bno} order by regdate
   </select> 
   
   <select id="deleteAttach">
   		delete from tbl_attach where bno=#{bno} 
   </select>
  
  <insert id="replaceAttach">
  		insert into tbl_attach(fullname, bno) values (#{fullName}, #{bno})
  </insert> -->
   
<!--  		<select id="listPage" resultType="F_BoardVO">
		<![CDATA[
			select 
				f_board_num, f_board_title, f_board_content, f_board_hits, 
				f_board_date, f_reply_count, f_num
			from f_board
			where f_board_num>0
			order by f_board_num desc, f_board_date desc
			limit #{page}, 10                                                                  
		]]>
	</select> -->
	
	<select id="listCriteria" resultType="F_BoardVO">
	<![CDATA[
			select 
				f_board_num, f_board_title, f_board_content, f_board_hits, 
				f_board_date, f_reply_count, f_num
			from f_board
			where f_board_num>0
			order by f_board_num desc, f_board_date desc
			limit #{pageStart}, #{perPageNum}                                                                  
		]]>
	</select> 
	
	</mapper>

